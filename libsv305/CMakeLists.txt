cmake_minimum_required(VERSION 3.0)
PROJECT(libsv305 C CXX)

set(CKCAMERASDK_VERSION "1.4.0")
set(CKCAMERASDK_SOVERSION "1")

include(GNUInstallDirs)

set(UDEVRULES_INSTALL_DIR "/lib/udev/rules.d" CACHE STRING "Base directory for udev rules")
set(LIB_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-error")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error")

IF(UNIX AND NOT WIN32 AND NOT APPLE)
  IF(CMAKE_SIZEOF_VOID_P MATCHES "8")
    exec_program(cp ARGS ${CMAKE_CURRENT_SOURCE_DIR}/libCKCameraSDK_x64.so ${CMAKE_BINARY_DIR}/libCKCameraSDK_x64.so.${CKCAMERASDK_VERSION})
    install( FILES ${CMAKE_BINARY_DIR}/libCKCameraSDK_x64.so.${CKCAMERASDK_VERSION} DESTINATION ${LIB_INSTALL_DIR}${LIB_POSTFIX})
    # Make sure symbolic links are installed
    install(CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink \"libCKCameraSDK_x64.so.${CKCAMERASDK_VERSION}\" \"libCKCameraSDK_x64.so.${CKCAMERASDK_SOVERSION}\" WORKING_DIRECTORY \"\$ENV{DESTDIR}/${BUILD_ROOT}${LIB_INSTALL_DIR}${LIB_POSTFIX}\" )" )
    install(CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink \"libCKCameraSDK_x64.so.${CKCAMERASDK_SOVERSION}\" \"libCKCameraSDK_x64.so\" WORKING_DIRECTORY \"\$ENV{DESTDIR}/${BUILD_ROOT}${LIB_INSTALL_DIR}${LIB_POSTFIX}\" )" )
  ELSE(CMAKE_SIZEOF_VOID_P MATCHES "8")
    exec_program(cp ARGS ${CMAKE_CURRENT_SOURCE_DIR}/libCKCameraSDK_x86.so ${CMAKE_BINARY_DIR}/libCKCameraSDK_x86.so.${CKCAMERASDK_VERSION})
    install( FILES ${CMAKE_BINARY_DIR}/libCKCameraSDK_x86.so.${CKCAMERASDK_VERSION} DESTINATION ${LIB_INSTALL_DIR}${LIB_POSTFIX})
    # Make sure symbolic links are installed
    install(CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink \"libCKCameraSDK_x86.so.${CKCAMERASDK_VERSION}\" \"libCKCameraSDK_x86.so.${CKCAMERASDK_SOVERSION}\" WORKING_DIRECTORY \"\$ENV{DESTDIR}/${BUILD_ROOT}${LIB_INSTALL_DIR}${LIB_POSTFIX}\" )" )
    install(CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink \"libCKCameraSDK_x86.so.${CKCAMERASDK_SOVERSION}\" \"libCKCameraSDK_x86.so\" WORKING_DIRECTORY \"\$ENV{DESTDIR}/${BUILD_ROOT}${LIB_INSTALL_DIR}${LIB_POSTFIX}\" )" )
  ENDIF (CMAKE_SIZEOF_VOID_P MATCHES "8")
ENDIF(UNIX AND NOT WIN32 AND NOT APPLE)

install(FILES 90-ckusb.rules DESTINATION ${UDEVRULES_INSTALL_DIR})
